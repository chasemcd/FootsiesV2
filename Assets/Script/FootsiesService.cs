// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: env/game/proto/footsies_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from env/game/proto/footsies_service.proto</summary>
public static partial class FootsiesServiceReflection {

  #region Descriptor
  /// <summary>File descriptor for env/game/proto/footsies_service.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static FootsiesServiceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiVlbnYvZ2FtZS9wcm90by9mb290c2llc19zZXJ2aWNlLnByb3RvIkIKCVN0",
          "ZXBJbnB1dBIRCglwMV9hY3Rpb24YASABKAMSEQoJcDJfYWN0aW9uGAIgASgD",
          "Eg8KB25GcmFtZXMYAyABKAMi4gQKC1BsYXllclN0YXRlEhkKEXBsYXllcl9w",
          "b3NpdGlvbl94GAEgASgCEg8KB2lzX2RlYWQYAiABKAgSFAoMdml0YWxfaGVh",
          "bHRoGAMgASgDEhQKDGd1YXJkX2hlYWx0aBgEIAEoAxIZChFjdXJyZW50X2Fj",
          "dGlvbl9pZBgFIAEoAxIcChRjdXJyZW50X2FjdGlvbl9mcmFtZRgGIAEoAxIi",
          "ChpjdXJyZW50X2FjdGlvbl9mcmFtZV9jb3VudBgHIAEoAxIVCg1pc19hY3Rp",
          "b25fZW5kGAggASgIEhwKFGlzX2Fsd2F5c19jYW5jZWxhYmxlGAkgASgIEiAK",
          "GGN1cnJlbnRfYWN0aW9uX2hpdF9jb3VudBgKIAEoAxIeChZjdXJyZW50X2hp",
          "dF9zdHVuX2ZyYW1lGAsgASgDEhYKDmlzX2luX2hpdF9zdHVuGAwgASgIEh0K",
          "FXNwcml0ZV9zaGFrZV9wb3NpdGlvbhgNIAEoAxIeChZtYXhfc3ByaXRlX3No",
          "YWtlX2ZyYW1lGA4gASgDEhIKCnZlbG9jaXR5X3gYDyABKAISFQoNaXNfZmFj",
          "ZV9yaWdodBgQIAEoCBIUCgxpbnB1dF9idWZmZXIYESADKAMSHwoXY3VycmVu",
          "dF9mcmFtZV9hZHZhbnRhZ2UYEiABKAMSJQodd291bGRfbmV4dF9mb3J3YXJk",
          "X2lucHV0X2Rhc2gYEyABKAgSJgoed291bGRfbmV4dF9iYWNrd2FyZF9pbnB1",
          "dF9kYXNoGBQgASgIEh8KF3NwZWNpYWxfYXR0YWNrX3Byb2dyZXNzGBUgASgC",
          "InMKCUdhbWVTdGF0ZRIdCgdwbGF5ZXIxGAEgASgLMgwuUGxheWVyU3RhdGUS",
          "HQoHcGxheWVyMhgCIAEoCzIMLlBsYXllclN0YXRlEhMKC3JvdW5kX3N0YXRl",
          "GAMgASgDEhMKC2ZyYW1lX2NvdW50GAQgASgDIkYKEEVuY29kZWRHYW1lU3Rh",
          "dGUSGAoQcGxheWVyMV9lbmNvZGluZxgBIAMoAhIYChBwbGF5ZXIyX2VuY29k",
          "aW5nGAIgAygCIhoKCUJvb2xWYWx1ZRINCgV2YWx1ZRgBIAEoCCIHCgVFbXB0",
          "eTLvAQoTRm9vdHNpZXNHYW1lU2VydmljZRIdCglTdGFydEdhbWUSBi5FbXB0",
          "eRoGLkVtcHR5IgASHQoJUmVzZXRHYW1lEgYuRW1wdHkaBi5FbXB0eSIAEicK",
          "C1N0ZXBORnJhbWVzEgouU3RlcElucHV0GgouR2FtZVN0YXRlIgASIAoIR2V0",
          "U3RhdGUSBi5FbXB0eRoKLkdhbWVTdGF0ZSIAEi4KD0dldEVuY29kZWRTdGF0",
          "ZRIGLkVtcHR5GhEuRW5jb2RlZEdhbWVTdGF0ZSIAEh8KB0lzUmVhZHkSBi5F",
          "bXB0eRoKLkJvb2xWYWx1ZSIAYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::StepInput), global::StepInput.Parser, new[]{ "P1Action", "P2Action", "NFrames" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerState), global::PlayerState.Parser, new[]{ "PlayerPositionX", "IsDead", "VitalHealth", "GuardHealth", "CurrentActionId", "CurrentActionFrame", "CurrentActionFrameCount", "IsActionEnd", "IsAlwaysCancelable", "CurrentActionHitCount", "CurrentHitStunFrame", "IsInHitStun", "SpriteShakePosition", "MaxSpriteShakeFrame", "VelocityX", "IsFaceRight", "InputBuffer", "CurrentFrameAdvantage", "WouldNextForwardInputDash", "WouldNextBackwardInputDash", "SpecialAttackProgress" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameState), global::GameState.Parser, new[]{ "Player1", "Player2", "RoundState", "FrameCount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EncodedGameState), global::EncodedGameState.Parser, new[]{ "Player1Encoding", "Player2Encoding" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BoolValue), global::BoolValue.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Empty), global::Empty.Parser, null, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class StepInput : pb::IMessage<StepInput>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<StepInput> _parser = new pb::MessageParser<StepInput>(() => new StepInput());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<StepInput> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FootsiesServiceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public StepInput() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public StepInput(StepInput other) : this() {
    p1Action_ = other.p1Action_;
    p2Action_ = other.p2Action_;
    nFrames_ = other.nFrames_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public StepInput Clone() {
    return new StepInput(this);
  }

  /// <summary>Field number for the "p1_action" field.</summary>
  public const int P1ActionFieldNumber = 1;
  private long p1Action_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long P1Action {
    get { return p1Action_; }
    set {
      p1Action_ = value;
    }
  }

  /// <summary>Field number for the "p2_action" field.</summary>
  public const int P2ActionFieldNumber = 2;
  private long p2Action_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long P2Action {
    get { return p2Action_; }
    set {
      p2Action_ = value;
    }
  }

  /// <summary>Field number for the "nFrames" field.</summary>
  public const int NFramesFieldNumber = 3;
  private long nFrames_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long NFrames {
    get { return nFrames_; }
    set {
      nFrames_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as StepInput);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(StepInput other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (P1Action != other.P1Action) return false;
    if (P2Action != other.P2Action) return false;
    if (NFrames != other.NFrames) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (P1Action != 0L) hash ^= P1Action.GetHashCode();
    if (P2Action != 0L) hash ^= P2Action.GetHashCode();
    if (NFrames != 0L) hash ^= NFrames.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (P1Action != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(P1Action);
    }
    if (P2Action != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(P2Action);
    }
    if (NFrames != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(NFrames);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (P1Action != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(P1Action);
    }
    if (P2Action != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(P2Action);
    }
    if (NFrames != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(NFrames);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (P1Action != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(P1Action);
    }
    if (P2Action != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(P2Action);
    }
    if (NFrames != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(NFrames);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(StepInput other) {
    if (other == null) {
      return;
    }
    if (other.P1Action != 0L) {
      P1Action = other.P1Action;
    }
    if (other.P2Action != 0L) {
      P2Action = other.P2Action;
    }
    if (other.NFrames != 0L) {
      NFrames = other.NFrames;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          P1Action = input.ReadInt64();
          break;
        }
        case 16: {
          P2Action = input.ReadInt64();
          break;
        }
        case 24: {
          NFrames = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          P1Action = input.ReadInt64();
          break;
        }
        case 16: {
          P2Action = input.ReadInt64();
          break;
        }
        case 24: {
          NFrames = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class PlayerState : pb::IMessage<PlayerState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerState> _parser = new pb::MessageParser<PlayerState>(() => new PlayerState());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FootsiesServiceReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerState(PlayerState other) : this() {
    playerPositionX_ = other.playerPositionX_;
    isDead_ = other.isDead_;
    vitalHealth_ = other.vitalHealth_;
    guardHealth_ = other.guardHealth_;
    currentActionId_ = other.currentActionId_;
    currentActionFrame_ = other.currentActionFrame_;
    currentActionFrameCount_ = other.currentActionFrameCount_;
    isActionEnd_ = other.isActionEnd_;
    isAlwaysCancelable_ = other.isAlwaysCancelable_;
    currentActionHitCount_ = other.currentActionHitCount_;
    currentHitStunFrame_ = other.currentHitStunFrame_;
    isInHitStun_ = other.isInHitStun_;
    spriteShakePosition_ = other.spriteShakePosition_;
    maxSpriteShakeFrame_ = other.maxSpriteShakeFrame_;
    velocityX_ = other.velocityX_;
    isFaceRight_ = other.isFaceRight_;
    inputBuffer_ = other.inputBuffer_.Clone();
    currentFrameAdvantage_ = other.currentFrameAdvantage_;
    wouldNextForwardInputDash_ = other.wouldNextForwardInputDash_;
    wouldNextBackwardInputDash_ = other.wouldNextBackwardInputDash_;
    specialAttackProgress_ = other.specialAttackProgress_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerState Clone() {
    return new PlayerState(this);
  }

  /// <summary>Field number for the "player_position_x" field.</summary>
  public const int PlayerPositionXFieldNumber = 1;
  private float playerPositionX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PlayerPositionX {
    get { return playerPositionX_; }
    set {
      playerPositionX_ = value;
    }
  }

  /// <summary>Field number for the "is_dead" field.</summary>
  public const int IsDeadFieldNumber = 2;
  private bool isDead_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsDead {
    get { return isDead_; }
    set {
      isDead_ = value;
    }
  }

  /// <summary>Field number for the "vital_health" field.</summary>
  public const int VitalHealthFieldNumber = 3;
  private long vitalHealth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long VitalHealth {
    get { return vitalHealth_; }
    set {
      vitalHealth_ = value;
    }
  }

  /// <summary>Field number for the "guard_health" field.</summary>
  public const int GuardHealthFieldNumber = 4;
  private long guardHealth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long GuardHealth {
    get { return guardHealth_; }
    set {
      guardHealth_ = value;
    }
  }

  /// <summary>Field number for the "current_action_id" field.</summary>
  public const int CurrentActionIdFieldNumber = 5;
  private long currentActionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CurrentActionId {
    get { return currentActionId_; }
    set {
      currentActionId_ = value;
    }
  }

  /// <summary>Field number for the "current_action_frame" field.</summary>
  public const int CurrentActionFrameFieldNumber = 6;
  private long currentActionFrame_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CurrentActionFrame {
    get { return currentActionFrame_; }
    set {
      currentActionFrame_ = value;
    }
  }

  /// <summary>Field number for the "current_action_frame_count" field.</summary>
  public const int CurrentActionFrameCountFieldNumber = 7;
  private long currentActionFrameCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CurrentActionFrameCount {
    get { return currentActionFrameCount_; }
    set {
      currentActionFrameCount_ = value;
    }
  }

  /// <summary>Field number for the "is_action_end" field.</summary>
  public const int IsActionEndFieldNumber = 8;
  private bool isActionEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsActionEnd {
    get { return isActionEnd_; }
    set {
      isActionEnd_ = value;
    }
  }

  /// <summary>Field number for the "is_always_cancelable" field.</summary>
  public const int IsAlwaysCancelableFieldNumber = 9;
  private bool isAlwaysCancelable_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsAlwaysCancelable {
    get { return isAlwaysCancelable_; }
    set {
      isAlwaysCancelable_ = value;
    }
  }

  /// <summary>Field number for the "current_action_hit_count" field.</summary>
  public const int CurrentActionHitCountFieldNumber = 10;
  private long currentActionHitCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CurrentActionHitCount {
    get { return currentActionHitCount_; }
    set {
      currentActionHitCount_ = value;
    }
  }

  /// <summary>Field number for the "current_hit_stun_frame" field.</summary>
  public const int CurrentHitStunFrameFieldNumber = 11;
  private long currentHitStunFrame_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CurrentHitStunFrame {
    get { return currentHitStunFrame_; }
    set {
      currentHitStunFrame_ = value;
    }
  }

  /// <summary>Field number for the "is_in_hit_stun" field.</summary>
  public const int IsInHitStunFieldNumber = 12;
  private bool isInHitStun_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsInHitStun {
    get { return isInHitStun_; }
    set {
      isInHitStun_ = value;
    }
  }

  /// <summary>Field number for the "sprite_shake_position" field.</summary>
  public const int SpriteShakePositionFieldNumber = 13;
  private long spriteShakePosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long SpriteShakePosition {
    get { return spriteShakePosition_; }
    set {
      spriteShakePosition_ = value;
    }
  }

  /// <summary>Field number for the "max_sprite_shake_frame" field.</summary>
  public const int MaxSpriteShakeFrameFieldNumber = 14;
  private long maxSpriteShakeFrame_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long MaxSpriteShakeFrame {
    get { return maxSpriteShakeFrame_; }
    set {
      maxSpriteShakeFrame_ = value;
    }
  }

  /// <summary>Field number for the "velocity_x" field.</summary>
  public const int VelocityXFieldNumber = 15;
  private float velocityX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float VelocityX {
    get { return velocityX_; }
    set {
      velocityX_ = value;
    }
  }

  /// <summary>Field number for the "is_face_right" field.</summary>
  public const int IsFaceRightFieldNumber = 16;
  private bool isFaceRight_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsFaceRight {
    get { return isFaceRight_; }
    set {
      isFaceRight_ = value;
    }
  }

  /// <summary>Field number for the "input_buffer" field.</summary>
  public const int InputBufferFieldNumber = 17;
  private static readonly pb::FieldCodec<long> _repeated_inputBuffer_codec
      = pb::FieldCodec.ForInt64(138);
  private readonly pbc::RepeatedField<long> inputBuffer_ = new pbc::RepeatedField<long>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<long> InputBuffer {
    get { return inputBuffer_; }
  }

  /// <summary>Field number for the "current_frame_advantage" field.</summary>
  public const int CurrentFrameAdvantageFieldNumber = 18;
  private long currentFrameAdvantage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CurrentFrameAdvantage {
    get { return currentFrameAdvantage_; }
    set {
      currentFrameAdvantage_ = value;
    }
  }

  /// <summary>Field number for the "would_next_forward_input_dash" field.</summary>
  public const int WouldNextForwardInputDashFieldNumber = 19;
  private bool wouldNextForwardInputDash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool WouldNextForwardInputDash {
    get { return wouldNextForwardInputDash_; }
    set {
      wouldNextForwardInputDash_ = value;
    }
  }

  /// <summary>Field number for the "would_next_backward_input_dash" field.</summary>
  public const int WouldNextBackwardInputDashFieldNumber = 20;
  private bool wouldNextBackwardInputDash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool WouldNextBackwardInputDash {
    get { return wouldNextBackwardInputDash_; }
    set {
      wouldNextBackwardInputDash_ = value;
    }
  }

  /// <summary>Field number for the "special_attack_progress" field.</summary>
  public const int SpecialAttackProgressFieldNumber = 21;
  private float specialAttackProgress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float SpecialAttackProgress {
    get { return specialAttackProgress_; }
    set {
      specialAttackProgress_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerPositionX, other.PlayerPositionX)) return false;
    if (IsDead != other.IsDead) return false;
    if (VitalHealth != other.VitalHealth) return false;
    if (GuardHealth != other.GuardHealth) return false;
    if (CurrentActionId != other.CurrentActionId) return false;
    if (CurrentActionFrame != other.CurrentActionFrame) return false;
    if (CurrentActionFrameCount != other.CurrentActionFrameCount) return false;
    if (IsActionEnd != other.IsActionEnd) return false;
    if (IsAlwaysCancelable != other.IsAlwaysCancelable) return false;
    if (CurrentActionHitCount != other.CurrentActionHitCount) return false;
    if (CurrentHitStunFrame != other.CurrentHitStunFrame) return false;
    if (IsInHitStun != other.IsInHitStun) return false;
    if (SpriteShakePosition != other.SpriteShakePosition) return false;
    if (MaxSpriteShakeFrame != other.MaxSpriteShakeFrame) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityX, other.VelocityX)) return false;
    if (IsFaceRight != other.IsFaceRight) return false;
    if(!inputBuffer_.Equals(other.inputBuffer_)) return false;
    if (CurrentFrameAdvantage != other.CurrentFrameAdvantage) return false;
    if (WouldNextForwardInputDash != other.WouldNextForwardInputDash) return false;
    if (WouldNextBackwardInputDash != other.WouldNextBackwardInputDash) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpecialAttackProgress, other.SpecialAttackProgress)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayerPositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerPositionX);
    if (IsDead != false) hash ^= IsDead.GetHashCode();
    if (VitalHealth != 0L) hash ^= VitalHealth.GetHashCode();
    if (GuardHealth != 0L) hash ^= GuardHealth.GetHashCode();
    if (CurrentActionId != 0L) hash ^= CurrentActionId.GetHashCode();
    if (CurrentActionFrame != 0L) hash ^= CurrentActionFrame.GetHashCode();
    if (CurrentActionFrameCount != 0L) hash ^= CurrentActionFrameCount.GetHashCode();
    if (IsActionEnd != false) hash ^= IsActionEnd.GetHashCode();
    if (IsAlwaysCancelable != false) hash ^= IsAlwaysCancelable.GetHashCode();
    if (CurrentActionHitCount != 0L) hash ^= CurrentActionHitCount.GetHashCode();
    if (CurrentHitStunFrame != 0L) hash ^= CurrentHitStunFrame.GetHashCode();
    if (IsInHitStun != false) hash ^= IsInHitStun.GetHashCode();
    if (SpriteShakePosition != 0L) hash ^= SpriteShakePosition.GetHashCode();
    if (MaxSpriteShakeFrame != 0L) hash ^= MaxSpriteShakeFrame.GetHashCode();
    if (VelocityX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityX);
    if (IsFaceRight != false) hash ^= IsFaceRight.GetHashCode();
    hash ^= inputBuffer_.GetHashCode();
    if (CurrentFrameAdvantage != 0L) hash ^= CurrentFrameAdvantage.GetHashCode();
    if (WouldNextForwardInputDash != false) hash ^= WouldNextForwardInputDash.GetHashCode();
    if (WouldNextBackwardInputDash != false) hash ^= WouldNextBackwardInputDash.GetHashCode();
    if (SpecialAttackProgress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpecialAttackProgress);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PlayerPositionX != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(PlayerPositionX);
    }
    if (IsDead != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsDead);
    }
    if (VitalHealth != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(VitalHealth);
    }
    if (GuardHealth != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(GuardHealth);
    }
    if (CurrentActionId != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(CurrentActionId);
    }
    if (CurrentActionFrame != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(CurrentActionFrame);
    }
    if (CurrentActionFrameCount != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(CurrentActionFrameCount);
    }
    if (IsActionEnd != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsActionEnd);
    }
    if (IsAlwaysCancelable != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsAlwaysCancelable);
    }
    if (CurrentActionHitCount != 0L) {
      output.WriteRawTag(80);
      output.WriteInt64(CurrentActionHitCount);
    }
    if (CurrentHitStunFrame != 0L) {
      output.WriteRawTag(88);
      output.WriteInt64(CurrentHitStunFrame);
    }
    if (IsInHitStun != false) {
      output.WriteRawTag(96);
      output.WriteBool(IsInHitStun);
    }
    if (SpriteShakePosition != 0L) {
      output.WriteRawTag(104);
      output.WriteInt64(SpriteShakePosition);
    }
    if (MaxSpriteShakeFrame != 0L) {
      output.WriteRawTag(112);
      output.WriteInt64(MaxSpriteShakeFrame);
    }
    if (VelocityX != 0F) {
      output.WriteRawTag(125);
      output.WriteFloat(VelocityX);
    }
    if (IsFaceRight != false) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsFaceRight);
    }
    inputBuffer_.WriteTo(output, _repeated_inputBuffer_codec);
    if (CurrentFrameAdvantage != 0L) {
      output.WriteRawTag(144, 1);
      output.WriteInt64(CurrentFrameAdvantage);
    }
    if (WouldNextForwardInputDash != false) {
      output.WriteRawTag(152, 1);
      output.WriteBool(WouldNextForwardInputDash);
    }
    if (WouldNextBackwardInputDash != false) {
      output.WriteRawTag(160, 1);
      output.WriteBool(WouldNextBackwardInputDash);
    }
    if (SpecialAttackProgress != 0F) {
      output.WriteRawTag(173, 1);
      output.WriteFloat(SpecialAttackProgress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PlayerPositionX != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(PlayerPositionX);
    }
    if (IsDead != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsDead);
    }
    if (VitalHealth != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(VitalHealth);
    }
    if (GuardHealth != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(GuardHealth);
    }
    if (CurrentActionId != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(CurrentActionId);
    }
    if (CurrentActionFrame != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(CurrentActionFrame);
    }
    if (CurrentActionFrameCount != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(CurrentActionFrameCount);
    }
    if (IsActionEnd != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsActionEnd);
    }
    if (IsAlwaysCancelable != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsAlwaysCancelable);
    }
    if (CurrentActionHitCount != 0L) {
      output.WriteRawTag(80);
      output.WriteInt64(CurrentActionHitCount);
    }
    if (CurrentHitStunFrame != 0L) {
      output.WriteRawTag(88);
      output.WriteInt64(CurrentHitStunFrame);
    }
    if (IsInHitStun != false) {
      output.WriteRawTag(96);
      output.WriteBool(IsInHitStun);
    }
    if (SpriteShakePosition != 0L) {
      output.WriteRawTag(104);
      output.WriteInt64(SpriteShakePosition);
    }
    if (MaxSpriteShakeFrame != 0L) {
      output.WriteRawTag(112);
      output.WriteInt64(MaxSpriteShakeFrame);
    }
    if (VelocityX != 0F) {
      output.WriteRawTag(125);
      output.WriteFloat(VelocityX);
    }
    if (IsFaceRight != false) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsFaceRight);
    }
    inputBuffer_.WriteTo(ref output, _repeated_inputBuffer_codec);
    if (CurrentFrameAdvantage != 0L) {
      output.WriteRawTag(144, 1);
      output.WriteInt64(CurrentFrameAdvantage);
    }
    if (WouldNextForwardInputDash != false) {
      output.WriteRawTag(152, 1);
      output.WriteBool(WouldNextForwardInputDash);
    }
    if (WouldNextBackwardInputDash != false) {
      output.WriteRawTag(160, 1);
      output.WriteBool(WouldNextBackwardInputDash);
    }
    if (SpecialAttackProgress != 0F) {
      output.WriteRawTag(173, 1);
      output.WriteFloat(SpecialAttackProgress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (PlayerPositionX != 0F) {
      size += 1 + 4;
    }
    if (IsDead != false) {
      size += 1 + 1;
    }
    if (VitalHealth != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(VitalHealth);
    }
    if (GuardHealth != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(GuardHealth);
    }
    if (CurrentActionId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentActionId);
    }
    if (CurrentActionFrame != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentActionFrame);
    }
    if (CurrentActionFrameCount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentActionFrameCount);
    }
    if (IsActionEnd != false) {
      size += 1 + 1;
    }
    if (IsAlwaysCancelable != false) {
      size += 1 + 1;
    }
    if (CurrentActionHitCount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentActionHitCount);
    }
    if (CurrentHitStunFrame != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentHitStunFrame);
    }
    if (IsInHitStun != false) {
      size += 1 + 1;
    }
    if (SpriteShakePosition != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(SpriteShakePosition);
    }
    if (MaxSpriteShakeFrame != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSpriteShakeFrame);
    }
    if (VelocityX != 0F) {
      size += 1 + 4;
    }
    if (IsFaceRight != false) {
      size += 2 + 1;
    }
    size += inputBuffer_.CalculateSize(_repeated_inputBuffer_codec);
    if (CurrentFrameAdvantage != 0L) {
      size += 2 + pb::CodedOutputStream.ComputeInt64Size(CurrentFrameAdvantage);
    }
    if (WouldNextForwardInputDash != false) {
      size += 2 + 1;
    }
    if (WouldNextBackwardInputDash != false) {
      size += 2 + 1;
    }
    if (SpecialAttackProgress != 0F) {
      size += 2 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerState other) {
    if (other == null) {
      return;
    }
    if (other.PlayerPositionX != 0F) {
      PlayerPositionX = other.PlayerPositionX;
    }
    if (other.IsDead != false) {
      IsDead = other.IsDead;
    }
    if (other.VitalHealth != 0L) {
      VitalHealth = other.VitalHealth;
    }
    if (other.GuardHealth != 0L) {
      GuardHealth = other.GuardHealth;
    }
    if (other.CurrentActionId != 0L) {
      CurrentActionId = other.CurrentActionId;
    }
    if (other.CurrentActionFrame != 0L) {
      CurrentActionFrame = other.CurrentActionFrame;
    }
    if (other.CurrentActionFrameCount != 0L) {
      CurrentActionFrameCount = other.CurrentActionFrameCount;
    }
    if (other.IsActionEnd != false) {
      IsActionEnd = other.IsActionEnd;
    }
    if (other.IsAlwaysCancelable != false) {
      IsAlwaysCancelable = other.IsAlwaysCancelable;
    }
    if (other.CurrentActionHitCount != 0L) {
      CurrentActionHitCount = other.CurrentActionHitCount;
    }
    if (other.CurrentHitStunFrame != 0L) {
      CurrentHitStunFrame = other.CurrentHitStunFrame;
    }
    if (other.IsInHitStun != false) {
      IsInHitStun = other.IsInHitStun;
    }
    if (other.SpriteShakePosition != 0L) {
      SpriteShakePosition = other.SpriteShakePosition;
    }
    if (other.MaxSpriteShakeFrame != 0L) {
      MaxSpriteShakeFrame = other.MaxSpriteShakeFrame;
    }
    if (other.VelocityX != 0F) {
      VelocityX = other.VelocityX;
    }
    if (other.IsFaceRight != false) {
      IsFaceRight = other.IsFaceRight;
    }
    inputBuffer_.Add(other.inputBuffer_);
    if (other.CurrentFrameAdvantage != 0L) {
      CurrentFrameAdvantage = other.CurrentFrameAdvantage;
    }
    if (other.WouldNextForwardInputDash != false) {
      WouldNextForwardInputDash = other.WouldNextForwardInputDash;
    }
    if (other.WouldNextBackwardInputDash != false) {
      WouldNextBackwardInputDash = other.WouldNextBackwardInputDash;
    }
    if (other.SpecialAttackProgress != 0F) {
      SpecialAttackProgress = other.SpecialAttackProgress;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          PlayerPositionX = input.ReadFloat();
          break;
        }
        case 16: {
          IsDead = input.ReadBool();
          break;
        }
        case 24: {
          VitalHealth = input.ReadInt64();
          break;
        }
        case 32: {
          GuardHealth = input.ReadInt64();
          break;
        }
        case 40: {
          CurrentActionId = input.ReadInt64();
          break;
        }
        case 48: {
          CurrentActionFrame = input.ReadInt64();
          break;
        }
        case 56: {
          CurrentActionFrameCount = input.ReadInt64();
          break;
        }
        case 64: {
          IsActionEnd = input.ReadBool();
          break;
        }
        case 72: {
          IsAlwaysCancelable = input.ReadBool();
          break;
        }
        case 80: {
          CurrentActionHitCount = input.ReadInt64();
          break;
        }
        case 88: {
          CurrentHitStunFrame = input.ReadInt64();
          break;
        }
        case 96: {
          IsInHitStun = input.ReadBool();
          break;
        }
        case 104: {
          SpriteShakePosition = input.ReadInt64();
          break;
        }
        case 112: {
          MaxSpriteShakeFrame = input.ReadInt64();
          break;
        }
        case 125: {
          VelocityX = input.ReadFloat();
          break;
        }
        case 128: {
          IsFaceRight = input.ReadBool();
          break;
        }
        case 138:
        case 136: {
          inputBuffer_.AddEntriesFrom(input, _repeated_inputBuffer_codec);
          break;
        }
        case 144: {
          CurrentFrameAdvantage = input.ReadInt64();
          break;
        }
        case 152: {
          WouldNextForwardInputDash = input.ReadBool();
          break;
        }
        case 160: {
          WouldNextBackwardInputDash = input.ReadBool();
          break;
        }
        case 173: {
          SpecialAttackProgress = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          PlayerPositionX = input.ReadFloat();
          break;
        }
        case 16: {
          IsDead = input.ReadBool();
          break;
        }
        case 24: {
          VitalHealth = input.ReadInt64();
          break;
        }
        case 32: {
          GuardHealth = input.ReadInt64();
          break;
        }
        case 40: {
          CurrentActionId = input.ReadInt64();
          break;
        }
        case 48: {
          CurrentActionFrame = input.ReadInt64();
          break;
        }
        case 56: {
          CurrentActionFrameCount = input.ReadInt64();
          break;
        }
        case 64: {
          IsActionEnd = input.ReadBool();
          break;
        }
        case 72: {
          IsAlwaysCancelable = input.ReadBool();
          break;
        }
        case 80: {
          CurrentActionHitCount = input.ReadInt64();
          break;
        }
        case 88: {
          CurrentHitStunFrame = input.ReadInt64();
          break;
        }
        case 96: {
          IsInHitStun = input.ReadBool();
          break;
        }
        case 104: {
          SpriteShakePosition = input.ReadInt64();
          break;
        }
        case 112: {
          MaxSpriteShakeFrame = input.ReadInt64();
          break;
        }
        case 125: {
          VelocityX = input.ReadFloat();
          break;
        }
        case 128: {
          IsFaceRight = input.ReadBool();
          break;
        }
        case 138:
        case 136: {
          inputBuffer_.AddEntriesFrom(ref input, _repeated_inputBuffer_codec);
          break;
        }
        case 144: {
          CurrentFrameAdvantage = input.ReadInt64();
          break;
        }
        case 152: {
          WouldNextForwardInputDash = input.ReadBool();
          break;
        }
        case 160: {
          WouldNextBackwardInputDash = input.ReadBool();
          break;
        }
        case 173: {
          SpecialAttackProgress = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class GameState : pb::IMessage<GameState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameState> _parser = new pb::MessageParser<GameState>(() => new GameState());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FootsiesServiceReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameState(GameState other) : this() {
    player1_ = other.player1_ != null ? other.player1_.Clone() : null;
    player2_ = other.player2_ != null ? other.player2_.Clone() : null;
    roundState_ = other.roundState_;
    frameCount_ = other.frameCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameState Clone() {
    return new GameState(this);
  }

  /// <summary>Field number for the "player1" field.</summary>
  public const int Player1FieldNumber = 1;
  private global::PlayerState player1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerState Player1 {
    get { return player1_; }
    set {
      player1_ = value;
    }
  }

  /// <summary>Field number for the "player2" field.</summary>
  public const int Player2FieldNumber = 2;
  private global::PlayerState player2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerState Player2 {
    get { return player2_; }
    set {
      player2_ = value;
    }
  }

  /// <summary>Field number for the "round_state" field.</summary>
  public const int RoundStateFieldNumber = 3;
  private long roundState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long RoundState {
    get { return roundState_; }
    set {
      roundState_ = value;
    }
  }

  /// <summary>Field number for the "frame_count" field.</summary>
  public const int FrameCountFieldNumber = 4;
  private long frameCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long FrameCount {
    get { return frameCount_; }
    set {
      frameCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Player1, other.Player1)) return false;
    if (!object.Equals(Player2, other.Player2)) return false;
    if (RoundState != other.RoundState) return false;
    if (FrameCount != other.FrameCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (player1_ != null) hash ^= Player1.GetHashCode();
    if (player2_ != null) hash ^= Player2.GetHashCode();
    if (RoundState != 0L) hash ^= RoundState.GetHashCode();
    if (FrameCount != 0L) hash ^= FrameCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (player1_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Player1);
    }
    if (player2_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Player2);
    }
    if (RoundState != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(RoundState);
    }
    if (FrameCount != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(FrameCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (player1_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Player1);
    }
    if (player2_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Player2);
    }
    if (RoundState != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(RoundState);
    }
    if (FrameCount != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(FrameCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (player1_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player1);
    }
    if (player2_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player2);
    }
    if (RoundState != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundState);
    }
    if (FrameCount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrameCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameState other) {
    if (other == null) {
      return;
    }
    if (other.player1_ != null) {
      if (player1_ == null) {
        Player1 = new global::PlayerState();
      }
      Player1.MergeFrom(other.Player1);
    }
    if (other.player2_ != null) {
      if (player2_ == null) {
        Player2 = new global::PlayerState();
      }
      Player2.MergeFrom(other.Player2);
    }
    if (other.RoundState != 0L) {
      RoundState = other.RoundState;
    }
    if (other.FrameCount != 0L) {
      FrameCount = other.FrameCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (player1_ == null) {
            Player1 = new global::PlayerState();
          }
          input.ReadMessage(Player1);
          break;
        }
        case 18: {
          if (player2_ == null) {
            Player2 = new global::PlayerState();
          }
          input.ReadMessage(Player2);
          break;
        }
        case 24: {
          RoundState = input.ReadInt64();
          break;
        }
        case 32: {
          FrameCount = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (player1_ == null) {
            Player1 = new global::PlayerState();
          }
          input.ReadMessage(Player1);
          break;
        }
        case 18: {
          if (player2_ == null) {
            Player2 = new global::PlayerState();
          }
          input.ReadMessage(Player2);
          break;
        }
        case 24: {
          RoundState = input.ReadInt64();
          break;
        }
        case 32: {
          FrameCount = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class EncodedGameState : pb::IMessage<EncodedGameState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EncodedGameState> _parser = new pb::MessageParser<EncodedGameState>(() => new EncodedGameState());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<EncodedGameState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FootsiesServiceReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EncodedGameState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EncodedGameState(EncodedGameState other) : this() {
    player1Encoding_ = other.player1Encoding_.Clone();
    player2Encoding_ = other.player2Encoding_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EncodedGameState Clone() {
    return new EncodedGameState(this);
  }

  /// <summary>Field number for the "player1_encoding" field.</summary>
  public const int Player1EncodingFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_player1Encoding_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> player1Encoding_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Player1Encoding {
    get { return player1Encoding_; }
  }

  /// <summary>Field number for the "player2_encoding" field.</summary>
  public const int Player2EncodingFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_player2Encoding_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> player2Encoding_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Player2Encoding {
    get { return player2Encoding_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as EncodedGameState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(EncodedGameState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!player1Encoding_.Equals(other.player1Encoding_)) return false;
    if(!player2Encoding_.Equals(other.player2Encoding_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= player1Encoding_.GetHashCode();
    hash ^= player2Encoding_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    player1Encoding_.WriteTo(output, _repeated_player1Encoding_codec);
    player2Encoding_.WriteTo(output, _repeated_player2Encoding_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    player1Encoding_.WriteTo(ref output, _repeated_player1Encoding_codec);
    player2Encoding_.WriteTo(ref output, _repeated_player2Encoding_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += player1Encoding_.CalculateSize(_repeated_player1Encoding_codec);
    size += player2Encoding_.CalculateSize(_repeated_player2Encoding_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(EncodedGameState other) {
    if (other == null) {
      return;
    }
    player1Encoding_.Add(other.player1Encoding_);
    player2Encoding_.Add(other.player2Encoding_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          player1Encoding_.AddEntriesFrom(input, _repeated_player1Encoding_codec);
          break;
        }
        case 18:
        case 21: {
          player2Encoding_.AddEntriesFrom(input, _repeated_player2Encoding_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 13: {
          player1Encoding_.AddEntriesFrom(ref input, _repeated_player1Encoding_codec);
          break;
        }
        case 18:
        case 21: {
          player2Encoding_.AddEntriesFrom(ref input, _repeated_player2Encoding_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class BoolValue : pb::IMessage<BoolValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BoolValue> _parser = new pb::MessageParser<BoolValue>(() => new BoolValue());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<BoolValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FootsiesServiceReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BoolValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BoolValue(BoolValue other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BoolValue Clone() {
    return new BoolValue(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private bool value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as BoolValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(BoolValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != false) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Value != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(BoolValue other) {
    if (other == null) {
      return;
    }
    if (other.Value != false) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class Empty : pb::IMessage<Empty>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Empty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FootsiesServiceReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Empty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Empty(Empty other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Empty Clone() {
    return new Empty(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Empty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Empty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Empty other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
